Module: LambdaSharp.MachineLearningInfrastructure

# The Module Version is shown in the CloudFormation stack and Lambda function descriptions.
Version: 1.0.0-Dev

# The Module Description is shown in the AWS CloudFormation console with the version number.
Description: Generate all the infrastructure required to deploy a SageMaker endpoint with a custom sentiment analysis model.

Using:
    - Module: LambdaSharp.Challenge.TrainingJob:1.0-Dev
    - Module: LambdaSharp.S3.IO:0.5

# The Items section defines values and resources for the module
Items:
# ================================================================================================
#  Mapping to identify the correct Image per region
# ================================================================================================
  - Mapping: ImageMap
    Description: Blazing text images for different regions
    Value:
      us-east-1:
        Image: "811284229777.dkr.ecr.us-east-1.amazonaws.com/blazingtext:latest"
      us-east-2:
        Image: "825641698319.dkr.ecr.us-east-2.amazonaws.com/blazingtext:latest"
      us-west-1:
        Image: "632365934929.dkr.ecr.us-west-1.amazonaws.com/blazingtext:latest"
      us-west-2:
        Image: "433757028032.dkr.ecr.us-west-2.amazonaws.com/blazingtext:latest"

# ================================================================================================
#  Required parameters
# 1) Train key defines the key (full path) of the training data in the S3MLData bucket
# 2) Test key defines the key (full path) of the testing data in the S3MLData bucket
# ================================================================================================
  - Parameter: TrainKey
    Description: The name of the train data in the S3MLData e.g. train.txt
    
  - Parameter: TestKey
    Description: The name of the test data in the S3MLData e.g. test.txt

# ================================================================================================
# Imported values
# 1) MLData bucket URL from the Training Job stack, this is what we will use to store 
#    the train/test data
# ================================================================================================
  - Import: S3MLDataUrl
    Scope: all
    Description: Import the URL of the S3 bucket
    Module: LambdaSharp.Challenge.TrainingJob::S3MLDataUrl
    
# ================================================================================================
# This is the execution role for SageMaker to run
# WARNING: For the sake of this challenge, the permissions on the role 
# are open to perform any SageMaker action  
# ================================================================================================
  - Resource: ExecutionRole
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "sagemaker.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: "root"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: 
                  - "*"
                Resource: "*"

# ================================================================================================
#  Create SageMaker infrastructure 
#  1) The training job is the custom resource that is generated by the TrainingJob lambda function
#  2) SageMaker model that references the output of the training job
#  3) SageMaker Config endpoint defines the characteristics of the machine/s that will be used 
#     to host the model 
#  4) SageMaker endpoint deploys the model to actual instances, scope is public to allow other 
#     stacks to import this resource and add permissions
#  5) Export the endpoint name, this will be used by the API stack 
# ================================================================================================
  - Resource: TrainingJob
    Type: LambdaSharpChallenge::BlazingTextTrainingJob
    Properties:
      S3TrainData: !Sub "${S3MLDataUrl}/${TrainKey}"
      S3ValiadtionData: !Sub "${S3MLDataUrl}/${TestKey}"
      S3Output: !Sub "${S3MLDataUrl}/"
      ExecutionRoleArn: !GetAtt ExecutionRole.Arn
  
  - Resource: BlazingTextModel
    Description: This is the model definition
    Type: AWS::SageMaker::Model
    DependsOn: [TrainingJob]
    Properties:
      ExecutionRoleArn: !GetAtt ExecutionRole.Arn
      PrimaryContainer:
        Image: !FindInMap [ "ImageMap", !Ref "AWS::Region", Image ]
        ModelDataUrl: !GetAtt TrainingJob.DataOutput
      ModelName: !GetAtt TrainingJob.JobName

  - Resource: BlazingTextEndpointConfiguration
    Description: Configuration for the model deployment
    Type: AWS::SageMaker::EndpointConfig
    DependsOn: [BlazingTextModel]
    Properties:
      ProductionVariants:
        - ModelName: !GetAtt TrainingJob.JobName
          VariantName: AllTrafic
          InitialInstanceCount: 1
          InstanceType: ml.t2.xlarge # <=============  $$$  $0.2598/hour  $$$
          InitialVariantWeight: 1
      EndpointConfigName: !GetAtt TrainingJob.JobName
    
  - Resource: BlazingTextEndpoint
    Scope: public
    Description: The model deployment endpoint
    Type: AWS::SageMaker::Endpoint
    DependsOn: [BlazingTextEndpointConfiguration]
    Properties:
      EndpointName: !GetAtt TrainingJob.JobName
      EndpointConfigName: !GetAtt BlazingTextEndpointConfiguration.EndpointConfigName
  
  - Variable: EnpointName
    Scope: public
    Value: !GetAtt BlazingTextEndpoint.EndpointName
